buildscript {
    repositories {
        jcenter()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.7.0'
        classpath 'com.eriwen:gradle-js-plugin:1.9.0'
    }
}

plugins {
    id 'java'
    id 'war'
}

apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'com.bmuschko.tomcat-base'

//ltye definovat rucne
webAppDirName = '/src/main/webapp/'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    jcenter()
    mavenCentral()
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    def tomcatVersion = '9.0.1'
    def jerseyVersion = '2.22.2'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:9.0.0.M6",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
    compile 'javax.ws.rs:javax.ws.rs-api:2.0.1'
    compile "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
    compile "org.glassfish.jersey.media:jersey-media-multipart:${jerseyVersion}"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.2.3'
    compile 'org.glassfish.jersey.media:jersey-media-jaxb'
    // Jersey core Servlet 3.x implementation
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.22.2'
    // Jersey Test Framework â€” Grizzly2 container
    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.22.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}
tomcat {
    httpProtocol = 'org.apache.coyote.http11.Http11Nio2Protocol'
    ajpProtocol  = 'org.apache.coyote.ajp.AjpNio2Protocol'
}


test {
    useJUnitPlatform()
}


